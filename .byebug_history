c
k
quit
array
d = i
array[i + 1]
k
c
k[i+1][ next_row_column]
k[i+1, next_row_column]
d = array[i + 1]
d = i
d = s
t
k
c
d = s
k
array
array[i + 1]
array[i + 1
d = i
d = s
d = i
i
k[i][s]
d = s
d = i
k
c
d = i
array
d = s
next_row_column
s
array[i + 1]
k
c
next_row_column
c
b 26
k
quit
k
quit
k
j = Array.new(array.size) {Array.new(t,default_value)}
array.size
array
t
k[n]
k[n][t]
k
quit
d = n
n
k[3]
k
c
d = i
c
d = i
c
d = i
d = s
d
c
d = s
v = s
c
s
t
k
k[i+1]
k[i+1][s]
k[i][s]
k
k[i][s]
k
c
k
c
k
k[i][s]
c
k[i][s]
k[i]
k
i
k
quit
array.size
n
array
k
quit
closest_pair
quit
new_arr
quit
    arr.select { |point| point.x <= l - sigma || point.x <= l + sigma }
l  = x
    arr.select { |point| point.x <= l - sigma || point.x <= l + sigma }
  end
    arr.select { |point| point.x <= l - sigma || point.x <= l + sigma }
def get_points_in_array arr, l, sigma
x - sigma
sigma
arr
    arr.select { |point| point.x == x - sigma || point.x == x + sigma }
      point.x == x - sigma || point.x == x + sigma
arr.select do |point|
x = middle
    end
      point.x == x - sigma || point.x == x + sigma
arr.select do |point|
arr
new_arr
quit
closest_pair
c
value
c
value
quit
sprintf('#<%s: (...)>', self.class.name)
object_id
Thread.current[InspectKey]
Thread.current
Thread
quit
graph
u
v
weight
c
u
weight
quit
adj
c
parent
graph
u
parent
c
parent
u
c
parent
u
c
u
parent
c
v
parent
c
parent
c
parent
c
parent
quit
graph.weight(v, "World")
adj
quit
edge
edge.weight("World")
edge = @type_of_edge.new @adjacent_vertices[v]
@type_of_edge
@adjacent_vertices[v].weight("World")
@adjacent_vertices[v]
quit
s.include?(:hello)
s = {:hello => "You"}
{:hello => "You"}
adj.weight("World")
adj
quit
GraphAlgorithms::Dijkstra
Dijkstra
require 'dijkstra'
quit
Dijkstra
require 'dijkstra'
quit
is_in_desc
comparison
element.send comparison, @array[middle]
quit
array.size
array
low
c
low
c
low
c
low
b 20
low
c
low
c
low
c
b 20
c
low
c
high
low
c
low
c
low
quit
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c

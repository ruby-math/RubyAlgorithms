quit
options
quit
weight
quit
options
quit
options
c
b 145
weight
c
b 224
@directed
directed
weight
quit
test = Graph.new allowed_classes=Friend
test = Graph.new Friend
test = Graph.new true, Friend
test = Graph.new directed=true, allowed_classes=Friend
test = Graph.new directed=true
test = Graph.new directed=False
test = Graph.new allowed_classes=Friend
graph_of_friends
quit
qui
test[2..3].each_with_index do |item, index| puts index end
test = [1, 2, 3, 5, 6, 8]
test = [1, 2, 3]
array[index]
index
item
selected_item
c
item
is_desc?
quit
is_desc?
quit
comparison_symbol
selected_item
item
index
item
array
quit
selected_item
item
c
quit
array[selected]
selected
c
b 106
item
selected_item
c
item
selected_item
c
item
selected_item
quit
c
quit
container[selected]
item
array
c
array
item
container[selected]
c
item
container[selected]
c
container[selected]
item
index
quit
array
c
array
c
array
selected
right
left
array
c
array
right
left
item.send(comparison_symbol, container[selected])
c
array
item
container[selected]
item.send(comparison_symbol, container[selected])
c
item
container[selected]
item.send(comparison_symbol, container[selected])
quit
array[3] < array[2]
array[2] < array[3]
array[2] < array[2]
index
find_minimum_or_maximum array, index, n, find_max=false
index
pos
find_minimum array, index, n
array[pos]
array
array[pos]
pos
find_minimum array, index, n
index
array
array[pos]
pos
c
pos
index
array
array[pos]
pos
c
array[pos]
pos
array.length - 1
array.length -1
index
n
index
array
find_minimum array, index, n
quit
container[left+5]
container[left+4]
container[left+4] > container[selected]
container[left+3] > container[selected]
selected = left + 2
container[left+3]
container[left+3] > container[selected]
selected = left + 1
container[left+2] > container[selected]
container[left+1] > container[selected]
container[selected]
container[left+1]
container[left..right]
item.next
item.next > container[selected]
item > container[selected]
item = container[left]
container = array
item = container[left]
container[left..right].each_with_index do |item, index| if item.send(comparison_symbol, container[selected]) selected = index end end selected end
right = n + 1
left = selected
comparison_symbol = :>.each_with_index do | item, index| item
selected = index-1
selected = left
array[index-1, n+1]
find_minimum array, index-1, n +1
array[3]
find_minimum array, index, n +1
index
array
c
array
array.length
n
index
array[2]
find_maximum array, index, n
index
pos
array[pos]
pos
array
c
array[4]
index
array
pos
c
n
index
pos
array
c
array[pos]
array
pos
quit
c
array[i]
c
counting_array
k
array[i]
c
counting_array
array[i]
c
array[i]
c
counting_array
array
array[i]
c
array[i]
counting_array
c
array[i]
counting_array
c
array[i]
counting_array
c
array[i]
counting_array
c
array[i]
c
b 89
counting_array
c
b 88
k
quit
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array
c
array

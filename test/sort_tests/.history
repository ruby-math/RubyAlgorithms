 # InsertionSort
 # @valid_arrays_asc =
  #     [
  #         { input: [3, 2, 4, 5, 6, 1], output: [1, 2, 3, 4, 5, 6] },
  #         { input: [9, 2, 4, 5, 6, 1], output: [1, 2, 4, 5, 6, 9] },
  #         { input: [0, 2, 4, 5, 6, 1], output: [0, 1, 2, 4, 5, 6] }
  #     ]
  #
  # @valid_arrays_desc =
  #     [
  #         { input: [3, 2, 4, 5, 6, 1], output: [6, 5, 4, 3, 2, 1] },
  #         { input: [9, 2, 4, 5, 6, 1], output: [9, 6, 5, 4, 2, 1] },
  #         { input: [0, 2, 4, 5, 6, 1], output: [6, 5, 4, 2, 1, 0] }
  #     ]
  #
  # @valid_arrays_asc.each do |array|
  #   input = array[:input]
  #   output = array[:output]
  #   define_method("test_#{input}_sorted_asc_is_#{output}") do
  #     actual = InsertionSort.order(input)
  #     expected = output
  #     assert_equal expected, actual
  #   end
  #   define_method("test_#{input}_using_initializer_asc_is_#{output}") do
  #     insertion = InsertionSort.new(input)
  #     expected = output
  #     assert_equal(expected, insertion.array)
  #   end
  # end
  #
  # @valid_arrays_desc.each do |array|
  #   input = array[:input]
  #   output = array[:output]
  #   define_method("test_#{input}_sorted_desc_is_#{output}") do
  #     actual = InsertionSort.order(input, :desc => true)
  #     expected = output
  #     assert_equal expected, actual
  #   end
  #   define_method("test_#{input}_using_initializer_desc_is_#{output}") do
  #     insertion = InsertionSort.new(input, :desc => true)
  #     expected = output
  #     assert_equal(expected, insertion.array)
  #   end
  # end
